{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\projects\\\\app-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"D:\\\\projects\\\\app-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:\\\\projects\\\\app-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\projects\\\\app-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\app-test\\\\src\\\\components\\\\MultiHeader.jsx\";\n\n/** @format */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { data } from '../db/raw';\nimport { Button } from 'react-bootstrap';\nimport TableModal from './TableModal';\nimport { ReactComponent as DownArrowSVG } from \"@svgr/webpack?-prettier,-svgo!../assets/images/icon-down-arrow.svg\";\nimport { ReactComponent as UpArrowSVG } from \"@svgr/webpack?-prettier,-svgo!../assets/images/icon-up-arrow.svg\";\nimport WithoutHeader from './WithoutHeader';\nimport WidgetHeaderWithButtons from './WidgetHeaderWithButtons';\n\nvar makeDefaultState = function makeDefaultState() {\n  return {\n    sorted: [],\n    page: 0,\n    pageSize: 5,\n    expanded: {\n      0: {},\n      1: {},\n      2: {},\n      3: {},\n      4: {},\n      5: {}\n    },\n    resized: [],\n    resizeable: false,\n    showPagination: false,\n    defaultPageSize: 10 // filtered: []\n\n  };\n};\n\nvar MultiHeader = function MultiHeader() {\n  var table = useRef();\n\n  var _useState = useState(makeDefaultState()),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectAll = _useState4[0],\n      setSelectAll = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selection = _useState6[0],\n      setSelection = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sortDesc = _useState8[0],\n      setSortDesc = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedData = _useState10[0],\n      setSelectedData = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      active = _useState12[0],\n      setActive = _useState12[1];\n\n  var handleModal = function handleModal() {\n    // console.log('T : ', selection);\n    var selected = {};\n\n    if (selection.length > 0) {\n      selected = selection.map(function (el) {\n        return data.filter(function (item) {\n          return item.id === el;\n        });\n      });\n      setSelectedData(selected);\n    } else {\n      return false;\n    }\n\n    setActive(true);\n  };\n\n  var handleClearSelection = function handleClearSelection() {\n    if (selection.length === data.map(function (el) {\n      return el.id;\n    }).length) {\n      toggleAll();\n    } else {\n      setSelection([]);\n    }\n  };\n\n  var toggleSelection = function toggleSelection(key, shift, row) {\n    /*\r\n        Implementation of how to manage the selection state is up to the developer.\r\n        This implementation uses an array stored in the component state.\r\n        Other implementations could use object keys, a Javascript Set, or Redux... etc.\r\n      */\n    // start off with the existing state\n    var selectionA = _toConsumableArray(selection);\n\n    var keyIndex = selectionA.indexOf(key); // check to see if the key exists\n\n    if (keyIndex >= 0) {\n      // it does exist so we will remove it using destructing\n      selectionA = [].concat(_toConsumableArray(selection.slice(0, keyIndex)), _toConsumableArray(selection.slice(keyIndex + 1)));\n    } else {\n      // it does not exist so add it\n      selectionA.push(+key);\n    } // update the state\n\n\n    setSelection(selectionA);\n  };\n\n  var toggleAll = function toggleAll() {\n    /*\r\n        'toggleAll' is a tricky concept with any filterable table\r\n        do you just select ALL the records that are in your data?\r\n        OR\r\n        do you only select ALL the records that are in the current filtered data?\r\n        \r\n        The latter makes more sense because 'selection' is a visual thing for the user.\r\n        This is especially true if you are going to implement a set of external functions\r\n        that act on the selected information (you would not want to DELETE the wrong thing!).\r\n        \r\n        So, to that end, access to the internals of ReactTable are required to get what is\r\n        currently visible in the table (either on the current page or any other page).\r\n      */\n    var selectall = selectAll ? false : true;\n    var selection = [];\n\n    if (selectall) {\n      // we need to get at the internals of ReactTable\n      var wrappedInstance = table.current.dataFunc();\n      console.log('hello : ', wrappedInstance); // the 'data' property contains the currently accessible records based on the filter and sort\n      // const currentRecords = wrappedInstance.props.data;\n\n      var currentRecords = wrappedInstance; // we just push all the IDs onto the selection array\n\n      currentRecords.forEach(function (item) {\n        selection.push(item.id);\n      });\n    }\n\n    setSelectAll(selectall);\n    setSelection(selection); // disabledFunc();\n  };\n\n  var isSelected = function isSelected(key) {\n    /*\r\n        Instead of passing our external selection state we provide an 'isSelected'\r\n        callback and detect the selection state ourselves. This allows any implementation\r\n        for selection (either an array, object keys, or even a Javascript Set object).\r\n      */\n    return selection.includes(key);\n  };\n\n  var sortFunction = function sortFunction(e) {\n    /*\r\n    \tGet the clicked element 'id' and 'desc' for add class in icon\r\n    */\n    var sortDesc = _defineProperty({}, e[0].id, e[0].desc);\n\n    setSortDesc(sortDesc);\n  };\n\n  var disableFunc = function disableFunc() {\n    /*\r\n    check length of selection item \r\n    */\n    return table.current && table.current.disabledFunc();\n  };\n\n  useEffect(function () {\n    disableFunc();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"main-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(WidgetHeaderWithButtons, {\n    title: \"Incidents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, selection.length > 0 && React.createElement(React.Fragment, null, React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleClearSelection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Clear Selection\"), React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Open All\")))), React.createElement(TableModal, {\n    title: \"selected data\",\n    content: selectedData,\n    active: active,\n    onDismiss: function onDismiss() {\n      setActive(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(WithoutHeader, {\n    ref: table,\n    data: data,\n    onSortedChange: function onSortedChange(e) {\n      sortFunction(e);\n    },\n    columns: [{\n      Header: function Header(rowInfo) {\n        return React.createElement(\"div\", {\n          onClick: toggleAll,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, \"Select\"));\n      },\n      sortable: false,\n      width: 100,\n      style: {\n        textAlign: 'center'\n      },\n      className: '-cursor-pointer',\n      Cell: function Cell(cell) {\n        return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n          id: !!cell.original && cell.original.id,\n          type: \"checkbox\",\n          checked: isSelected(!!cell.original && cell.original.id) && selection.includes(!!cell.original && cell.original.id),\n          onClick: function onClick(e) {\n            var shiftKey = e.shiftKey;\n            e.stopPropagation();\n            toggleSelection(!!cell.original && cell.original.id, shiftKey, cell);\n          },\n          onChange: function onChange() {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }));\n      }\n    }, {\n      accessor: 'name',\n      Aggregated: function Aggregated(row) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, row.value);\n      },\n      width: 450,\n      Header: function Header(rowInfo) {\n        return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, \"Name\"), React.createElement(DownArrowSVG, {\n          className: \"icon down --arrow \".concat(sortDesc['name'] ? 'active' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }), React.createElement(UpArrowSVG, {\n          className: \"icon up --arrow \".concat(sortDesc['name'] ? '' : 'active'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }));\n      }\n    }, {\n      id: 'postId',\n      sortable: false,\n      className: 'group',\n      accessor: function accessor(d) {\n        return d.postId;\n      },\n      style: {\n        textTransform: 'capitalize'\n      },\n      width: 170,\n      Expander: function Expander(_ref) {\n        var isExpanded = _ref.isExpanded,\n            rest = _objectWithoutProperties(_ref, [\"isExpanded\"]);\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, isExpanded ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }) : React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }));\n      },\n      PivotValue: function PivotValue(row) {\n        return React.createElement(\"span\", {\n          className: \"test\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, row.value);\n      }\n    }, {\n      // Header: 'Age',\n      accessor: 'email',\n      width: 150,\n      Aggregated: function Aggregated(row) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, row.value);\n      },\n      Header: function Header(rowInfo) {\n        return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, \"Email\"), React.createElement(DownArrowSVG, {\n          className: \"icon down --arrow \".concat(sortDesc['email'] ? 'active' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }), React.createElement(UpArrowSVG, {\n          className: \"icon up --arrow \".concat(sortDesc['email'] ? '' : 'active'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }));\n      }\n    }],\n    minWidth: 100,\n    showPagination: state.showPagination,\n    pivotBy: ['postId'] // filterable\n    ,\n    defaultPageSize: state.defaultPageSize,\n    className: \"react-table\" // Controlled props\n    ,\n    resizeable: state.resizeable,\n    sortable: true // sorted={this.state.sorted}\n    ,\n    page: state.page,\n    pageSize: state.pageSize,\n    expanded: state.expanded,\n    selection: selection // resized={this.state.resized}\n    // filtered={this.state.filtered}\n    // Callbacks\n    // onSortedChange={sorted => this.setState({ sorted })}\n    // onPageChange={page => this.setState({ page })}\n    // onPageSizeChange={(pageSize, page) =>\n    //   this.setState({ page, pageSize })\n    // }\n    // onExpandedChange={expanded => this.setState({ expanded })}\n    // onResizedChange={resized => this.setState({ resized })}\n    // onFilteredChange={filtered => this.setState({ filtered })}\n    // defaultFilterMethod={(filter, row, column) => {\n    //   const id = filter.pivotId || filter.id;\n    //   return row[id] !== undefined\n    //     ? String(row[id])\n    //         .toLowerCase()\n    //         .indexOf(filter.value.toLowerCase()) !== -1\n    //     : true;\n    // }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }));\n};\n\nexport default MultiHeader;","map":{"version":3,"sources":["D:/projects/app-test/src/components/MultiHeader.jsx"],"names":["React","useState","useRef","useEffect","data","Button","TableModal","WithoutHeader","WidgetHeaderWithButtons","makeDefaultState","sorted","page","pageSize","expanded","resized","resizeable","showPagination","defaultPageSize","MultiHeader","table","state","setState","selectAll","setSelectAll","selection","setSelection","sortDesc","setSortDesc","selectedData","setSelectedData","active","setActive","handleModal","selected","length","map","el","filter","item","id","handleClearSelection","toggleAll","toggleSelection","key","shift","row","selectionA","keyIndex","indexOf","slice","push","selectall","wrappedInstance","current","dataFunc","console","log","currentRecords","forEach","isSelected","includes","sortFunction","e","desc","disableFunc","disabledFunc","Header","rowInfo","sortable","width","style","textAlign","className","Cell","cell","original","shiftKey","stopPropagation","accessor","Aggregated","value","d","postId","textTransform","Expander","isExpanded","rest","PivotValue"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { data } from '../db/raw';\r\nimport { Button } from 'react-bootstrap';\r\nimport TableModal from './TableModal';\r\nimport { ReactComponent as DownArrowSVG } from '../assets/images/icon-down-arrow.svg';\r\nimport { ReactComponent as UpArrowSVG } from '../assets/images/icon-up-arrow.svg';\r\nimport WithoutHeader from './WithoutHeader';\r\nimport WidgetHeaderWithButtons from './WidgetHeaderWithButtons';\r\n\r\nconst makeDefaultState = () => ({\r\n\tsorted: [],\r\n\tpage: 0,\r\n\tpageSize: 5,\r\n\texpanded: { 0: {}, 1: {}, 2: {}, 3: {}, 4: {}, 5: {} },\r\n\tresized: [],\r\n\tresizeable: false,\r\n\tshowPagination: false,\r\n\tdefaultPageSize: 10\r\n\t// filtered: []\r\n});\r\n\r\nconst MultiHeader = () => {\r\n\tconst table = useRef();\r\n\tconst [state, setState] = useState(makeDefaultState());\r\n\tconst [selectAll, setSelectAll] = useState(false);\r\n\tconst [selection, setSelection] = useState([]);\r\n\tconst [sortDesc, setSortDesc] = useState({});\r\n\tconst [selectedData, setSelectedData] = useState([]);\r\n\r\n\tconst [active, setActive] = useState(false);\r\n\tconst handleModal = () => {\r\n\t\t// console.log('T : ', selection);\r\n\t\tlet selected = {};\r\n\t\tif (selection.length > 0) {\r\n\t\t\tselected = selection.map(el =>\r\n\t\t\t\tdata.filter(item => {\r\n\t\t\t\t\treturn item.id === el;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tsetSelectedData(selected);\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tsetActive(true);\r\n\t};\r\n\tconst handleClearSelection = () => {\r\n\t\tif (selection.length === data.map(el => el.id).length) {\r\n\t\t\ttoggleAll();\r\n\t\t} else {\r\n\t\t\tsetSelection([]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleSelection = (key, shift, row) => {\r\n\t\t/*\r\n      Implementation of how to manage the selection state is up to the developer.\r\n      This implementation uses an array stored in the component state.\r\n      Other implementations could use object keys, a Javascript Set, or Redux... etc.\r\n    */\r\n\t\t// start off with the existing state\r\n\t\tlet selectionA = [...selection];\r\n\t\tconst keyIndex = selectionA.indexOf(key);\r\n\t\t// check to see if the key exists\r\n\t\tif (keyIndex >= 0) {\r\n\t\t\t// it does exist so we will remove it using destructing\r\n\t\t\tselectionA = [\r\n\t\t\t\t...selection.slice(0, keyIndex),\r\n\t\t\t\t...selection.slice(keyIndex + 1)\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\t// it does not exist so add it\r\n\t\t\tselectionA.push(+key);\r\n\t\t}\r\n\t\t// update the state\r\n\t\tsetSelection(selectionA);\r\n\t};\r\n\r\n\tconst toggleAll = () => {\r\n\t\t/*\r\n      'toggleAll' is a tricky concept with any filterable table\r\n      do you just select ALL the records that are in your data?\r\n      OR\r\n      do you only select ALL the records that are in the current filtered data?\r\n      \r\n      The latter makes more sense because 'selection' is a visual thing for the user.\r\n      This is especially true if you are going to implement a set of external functions\r\n      that act on the selected information (you would not want to DELETE the wrong thing!).\r\n      \r\n      So, to that end, access to the internals of ReactTable are required to get what is\r\n      currently visible in the table (either on the current page or any other page).\r\n    */\r\n\t\tconst selectall = selectAll ? false : true;\r\n\t\tconst selection = [];\r\n\t\tif (selectall) {\r\n\t\t\t// we need to get at the internals of ReactTable\r\n\t\t\tconst wrappedInstance = table.current.dataFunc();\r\n\t\t\tconsole.log('hello : ', wrappedInstance);\r\n\t\t\t// the 'data' property contains the currently accessible records based on the filter and sort\r\n\t\t\t// const currentRecords = wrappedInstance.props.data;\r\n\t\t\tconst currentRecords = wrappedInstance;\r\n\t\t\t// we just push all the IDs onto the selection array\r\n\t\t\tcurrentRecords.forEach(item => {\r\n\t\t\t\tselection.push(item.id);\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetSelectAll(selectall);\r\n\t\tsetSelection(selection);\r\n\t\t// disabledFunc();\r\n\t};\r\n\r\n\tconst isSelected = key => {\r\n\t\t/*\r\n      Instead of passing our external selection state we provide an 'isSelected'\r\n      callback and detect the selection state ourselves. This allows any implementation\r\n      for selection (either an array, object keys, or even a Javascript Set object).\r\n    */\r\n\t\treturn selection.includes(key);\r\n\t};\r\n\r\n\tconst sortFunction = e => {\r\n\t\t/*\r\n\t\t\tGet the clicked element 'id' and 'desc' for add class in icon\r\n\t\t*/\r\n\t\tlet sortDesc = { [e[0].id]: e[0].desc };\r\n\t\tsetSortDesc(sortDesc);\r\n\t};\r\n\tconst disableFunc = () => {\r\n\t\t/*\r\n\t\tcheck length of selection item \r\n\t\t*/\r\n\t\treturn table.current && table.current.disabledFunc();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tdisableFunc();\r\n\t}, []);\r\n\treturn (\r\n\t\t<div className='main-page'>\r\n\t\t\t<WidgetHeaderWithButtons title='Incidents'>\r\n\t\t\t\t<div className='actions'>\r\n\t\t\t\t\t{selection.length > 0 && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='outline-secondary'\r\n\t\t\t\t\t\t\t\tonClick={handleClearSelection}>\r\n\t\t\t\t\t\t\t\tClear Selection\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant='outline-secondary' onClick={handleModal}>\r\n\t\t\t\t\t\t\t\tOpen All\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</WidgetHeaderWithButtons>\r\n\r\n\t\t\t<TableModal\r\n\t\t\t\ttitle='selected data'\r\n\t\t\t\tcontent={selectedData}\r\n\t\t\t\tactive={active}\r\n\t\t\t\tonDismiss={() => {\r\n\t\t\t\t\tsetActive(false);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<WithoutHeader\r\n\t\t\t\tref={table}\r\n\t\t\t\tdata={data}\r\n\t\t\t\tonSortedChange={e => {\r\n\t\t\t\t\tsortFunction(e);\r\n\t\t\t\t}}\r\n\t\t\t\tcolumns={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tHeader: rowInfo => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div onClick={toggleAll}>\r\n\t\t\t\t\t\t\t\t\t<span>Select</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsortable: false,\r\n\t\t\t\t\t\twidth: 100,\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\ttextAlign: 'center'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclassName: '-cursor-pointer',\r\n\t\t\t\t\t\tCell: cell => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tid={!!cell.original && cell.original.id}\r\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\tchecked={\r\n\t\t\t\t\t\t\t\t\t\t\tisSelected(!!cell.original && cell.original.id) &&\r\n\t\t\t\t\t\t\t\t\t\t\tselection.includes(!!cell.original && cell.original.id)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\t\tconst { shiftKey } = e;\r\n\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\t\t\t\ttoggleSelection(\r\n\t\t\t\t\t\t\t\t\t\t\t\t!!cell.original && cell.original.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tshiftKey,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcell\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => {}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taccessor: 'name',\r\n\t\t\t\t\t\tAggregated: row => {\r\n\t\t\t\t\t\t\treturn <span>{row.value}</span>;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\twidth: 450,\r\n\t\t\t\t\t\tHeader: rowInfo => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<span>Name</span>\r\n\t\t\t\t\t\t\t\t\t<DownArrowSVG\r\n\t\t\t\t\t\t\t\t\t\tclassName={`icon down --arrow ${\r\n\t\t\t\t\t\t\t\t\t\t\tsortDesc['name'] ? 'active' : ''\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<UpArrowSVG\r\n\t\t\t\t\t\t\t\t\t\tclassName={`icon up --arrow ${\r\n\t\t\t\t\t\t\t\t\t\t\tsortDesc['name'] ? '' : 'active'\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 'postId',\r\n\t\t\t\t\t\tsortable: false,\r\n\t\t\t\t\t\tclassName: 'group',\r\n\t\t\t\t\t\taccessor: d => d.postId,\r\n\t\t\t\t\t\tstyle: { textTransform: 'capitalize' },\r\n\r\n\t\t\t\t\t\twidth: 170,\r\n\t\t\t\t\t\tExpander: ({ isExpanded, ...rest }) => {\r\n\t\t\t\t\t\t\treturn <div>{isExpanded ? <span /> : <span />}</div>;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tPivotValue: row => <span className='test'>{row.value}</span>\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Header: 'Age',\r\n\t\t\t\t\t\taccessor: 'email',\r\n\t\t\t\t\t\twidth: 150,\r\n\t\t\t\t\t\tAggregated: row => {\r\n\t\t\t\t\t\t\treturn <span>{row.value}</span>;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tHeader: rowInfo => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<span>Email</span>\r\n\r\n\t\t\t\t\t\t\t\t\t<DownArrowSVG\r\n\t\t\t\t\t\t\t\t\t\tclassName={`icon down --arrow ${\r\n\t\t\t\t\t\t\t\t\t\t\tsortDesc['email'] ? 'active' : ''\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<UpArrowSVG\r\n\t\t\t\t\t\t\t\t\t\tclassName={`icon up --arrow ${\r\n\t\t\t\t\t\t\t\t\t\t\tsortDesc['email'] ? '' : 'active'\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]}\r\n\t\t\t\tminWidth={100}\r\n\t\t\t\tshowPagination={state.showPagination}\r\n\t\t\t\tpivotBy={['postId']}\r\n\t\t\t\t// filterable\r\n\t\t\t\tdefaultPageSize={state.defaultPageSize}\r\n\t\t\t\tclassName='react-table'\r\n\t\t\t\t// Controlled props\r\n\t\t\t\tresizeable={state.resizeable}\r\n\t\t\t\tsortable\r\n\t\t\t\t// sorted={this.state.sorted}\r\n\t\t\t\tpage={state.page}\r\n\t\t\t\tpageSize={state.pageSize}\r\n\t\t\t\texpanded={state.expanded}\r\n\t\t\t\tselection={selection}\r\n\t\t\t\t// resized={this.state.resized}\r\n\t\t\t\t// filtered={this.state.filtered}\r\n\t\t\t\t// Callbacks\r\n\t\t\t\t// onSortedChange={sorted => this.setState({ sorted })}\r\n\t\t\t\t// onPageChange={page => this.setState({ page })}\r\n\t\t\t\t// onPageSizeChange={(pageSize, page) =>\r\n\t\t\t\t//   this.setState({ page, pageSize })\r\n\t\t\t\t// }\r\n\t\t\t\t// onExpandedChange={expanded => this.setState({ expanded })}\r\n\t\t\t\t// onResizedChange={resized => this.setState({ resized })}\r\n\t\t\t\t// onFilteredChange={filtered => this.setState({ filtered })}\r\n\t\t\t\t// defaultFilterMethod={(filter, row, column) => {\r\n\t\t\t\t//   const id = filter.pivotId || filter.id;\r\n\t\t\t\t//   return row[id] !== undefined\r\n\t\t\t\t//     ? String(row[id])\r\n\t\t\t\t//         .toLowerCase()\r\n\t\t\t\t//         .indexOf(filter.value.toLowerCase()) !== -1\r\n\t\t\t\t//     : true;\r\n\t\t\t\t// }}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default MultiHeader;\r\n"]},"metadata":{},"sourceType":"module"}