{"ast":null,"code":"import _classCallCheck from \"D:\\\\projects\\\\app-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\projects\\\\app-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\projects\\\\app-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\projects\\\\app-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\projects\\\\app-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\projects\\\\app-test\\\\src\\\\components\\\\CommentList.js\";\n\n/** @format */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar CommentList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentList, _Component);\n\n  function CommentList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checked: false,\n      checkbox: [1, 2, 3, 4, 5]\n    };\n\n    _this.handleSelect = function () {\n      _this.setState({\n        checked: !_this.state.checked\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentList, [{\n    key: \"renderComments\",\n    value: function renderComments() {\n      return this.props.comments.map(function (comment) {\n        return React.createElement(\"li\", {\n          key: comment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, comment);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Comment List\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.renderComments()), React.createElement(\"button\", {\n        className: \"select\",\n        onClick: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Select All\"), this.state.checkbox.map(function (el) {\n        return React.createElement(\"input\", {\n          id: el,\n          key: el,\n          type: \"checkbox\",\n          checked: _this2.state.checked,\n          onChange: function onChange() {\n            _this2.setState({\n              checked: !_this2.state.checked\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return CommentList;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    comments: state.comments\n  };\n}\n\nexport default connect(mapStateToProps)(CommentList);","map":{"version":3,"sources":["D:/projects/app-test/src/components/CommentList.js"],"names":["React","Component","connect","CommentList","state","checked","checkbox","handleSelect","setState","props","comments","map","comment","renderComments","el","mapStateToProps"],"mappings":";;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,W;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,OAAO,EAAE,KADF;AAEPC,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AAFH,K;;UASRC,Y,GAAe,YAAM;AACpB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAAvB,OAAd;AACA,K;;;;;;;qCAPgB;AAChB,aAAO,KAAKI,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,UAAAC,OAAO,EAAI;AACzC,eAAO;AAAI,UAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBA,OAAnB,CAAP;AACA,OAFM,CAAP;AAGA;;;6BAKQ;AAAA;;AACR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKC,cAAL,EAAL,CAFD,EAIC;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,KAAKN,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJD,EAOE,KAAKH,KAAL,CAAWE,QAAX,CAAoBK,GAApB,CAAwB,UAAAG,EAAE,EAAI;AAC9B,eACC;AACC,UAAA,EAAE,EAAEA,EADL;AAEC,UAAA,GAAG,EAAEA,EAFN;AAGC,UAAA,IAAI,EAAC,UAHN;AAIC,UAAA,OAAO,EAAE,MAAI,CAACV,KAAL,CAAWC,OAJrB;AAKC,UAAA,QAAQ,EAAE,oBAAM;AACf,YAAA,MAAI,CAACG,QAAL,CAAc;AAAEH,cAAAA,OAAO,EAAE,CAAC,MAAI,CAACD,KAAL,CAAWC;AAAvB,aAAd;AACA,WAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,OAZA,CAPF,CADD;AAuBA;;;;EAtCwBJ,S;;AAyC1B,SAASc,eAAT,CAAyBX,KAAzB,EAAgC;AAC/B,SAAO;AAAEM,IAAAA,QAAQ,EAAEN,KAAK,CAACM;AAAlB,GAAP;AACA;;AAED,eAAeR,OAAO,CAACa,eAAD,CAAP,CAAyBZ,WAAzB,CAAf","sourcesContent":["/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CommentList extends Component {\r\n\tstate = {\r\n\t\tchecked: false,\r\n\t\tcheckbox: [1, 2, 3, 4, 5]\r\n\t};\r\n\trenderComments() {\r\n\t\treturn this.props.comments.map(comment => {\r\n\t\t\treturn <li key={comment}>{comment}</li>;\r\n\t\t});\r\n\t}\r\n\thandleSelect = () => {\r\n\t\tthis.setState({ checked: !this.state.checked });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h4>Comment List</h4>\r\n\t\t\t\t<ul>{this.renderComments()}</ul>\r\n\r\n\t\t\t\t<button className='select' onClick={this.handleSelect}>\r\n\t\t\t\t\tSelect All\r\n\t\t\t\t</button>\r\n\t\t\t\t{this.state.checkbox.map(el => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid={el}\r\n\t\t\t\t\t\t\tkey={el}\r\n\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\tchecked={this.state.checked}\r\n\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\tthis.setState({ checked: !this.state.checked });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn { comments: state.comments };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CommentList);\r\n"]},"metadata":{},"sourceType":"module"}